{"ast":null,"code":"var _jsxFileName = \"/Users/andromeda/files/code/react/part1/src/App.js\";\nimport React, { useState } from 'react';\nimport Note from './components/Note';\n\nconst App = props => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  }, []);\n  console.log('render', notes.length, 'notes');\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const rows = () => notesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/andromeda/files/code/react/part1/src/App.js"],"names":["React","useState","Note","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","console","log","axios","get","then","response","data","length","notesToShow","filter","note","important","rows","map","id","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","Math","random","concat","handleNoteChange","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAU,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,IAAAA,KAAK,CACFC,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAP,MAAAA,QAAQ,CAACW,QAAQ,CAACC,IAAV,CAAR;AACD,KALH;AAMD,GARQ,EAQN,EARM,CAAT;AASAN,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,KAAK,CAACc,MAA5B,EAAoC,OAApC;AAEA,QAAMC,WAAW,GAAGX,OAAO,GACvBJ,KADuB,GAEvBA,KAAK,CAACgB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAFJ;;AAIA,QAAMC,IAAI,GAAG,MAAMJ,WAAW,CAACK,GAAZ,CAAgBH,IAAI,IACrC,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACI,EADZ;AAEE,IAAA,IAAI,EAAEJ,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,CAAnB;;AAOA,QAAMK,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAExB,OADQ;AAEjByB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBX,MAAAA,SAAS,EAAEY,IAAI,CAACC,MAAL,KAAgB,GAHV;AAIjBV,MAAAA,EAAE,EAAErB,KAAK,CAACc,MAAN,GAAe;AAJF,KAAnB;AAOAb,IAAAA,QAAQ,CAACD,KAAK,CAACgC,MAAN,CAAaP,UAAb,CAAD,CAAR;AACAtB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAXD;;AAaA,QAAM8B,gBAAgB,GAAIV,KAAD,IAAW;AAClChB,IAAAA,OAAO,CAACC,GAAR,CAAYe,KAAK,CAACW,MAAN,CAAaC,KAAzB;AACAhC,IAAAA,UAAU,CAACoB,KAAK,CAACW,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,OAAO,EAAE,MAAM9B,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACUA,OAAO,GAAG,WAAH,GAAiB,KADlC,CADJ,CAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,IAAI,EADP,CAPF,EAUE;AAAM,IAAA,QAAQ,EAAEG,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACI,IAAA,KAAK,EAAEpB,OADX;AAEI,IAAA,QAAQ,EAAE+B,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CAVF,CADF;AAoBD,CAjED;;AAmEA,eAAenC,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Note from './components/Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/notes')\n      .then(response => {\n        console.log('promise fulfilled')\n        setNotes(response.data)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n    />\n  )\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n  \n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n          <button onClick={() => setShowAll(!showAll)}>\n              show {showAll ? 'important' : 'all'}\n          </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n            value={newNote}\n            onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form> \n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}